swagger: "2.0"
info:
  description: "This is a Pokémon API that makes it easy to access Pokémon data, all broken down by region for convenience."
  version: "1.0.0"
  title: "PokeAPI"
  termsOfService: "https://pokeapi.co/about"
  contact:
    email: "norbert.bosz@gmail.com"
host: "pokeapi.co"
basePath: "/v2"
tags:
  - name: "pokemon"
    description: "Everything about Pokemon"
schemes:
  - "https"
paths:
  /pokemon:
    get:
      tags:
        - "pokemon"
      summary: "Get all Pokemon"
      description: "Finds all Pokemon"
      operationId: "getAllPokemon"
      produces:
        - "application/json"
      parameters:
        - in: "query"
          name: "offset"
          description: "Pokemon ID minimum value"
          required: false
          type: "integer"
          format: "int64"
        - in: "query"
          name: "limit"
          description: "Number of listed Pokemon"
          required: false
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "Successful"
        "400":
          description: "Bad request"
    post:
      tags:
        - "pokemon"
      summary: "Add Pokemon"
      description: "Creates new Pokemon"
      operationId: "createPokemon"
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Pokemon entity to create"
          required: true
          schema:
            $ref: "#/definitions/Pokemon"
      responses:
        "200":
          description: "Successful"
        "400":
          description: "Bad request"
        "404":
          description: "Not found"
  /pokemon/{pokemonId}:
    get:
      tags:
        - "pokemon"
      summary: "Get Pokemon by ID"
      description: "Returns Pokemon with required ID"
      operationId: "getPokemon"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "pokemonId"
          description: "Pokemon ID"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "Successful"
        "400":
          description: "Bad request"
        "404":
          description: "Not found"
    put:
      tags:
        - "pokemon"
      summary: "Update Pokemon by ID"
      description: "Updates Pokemon with required ID"
      operationId: "updatePokemon"
      consumes:
        - "application/json"
      parameters:
        - in: "path"
          name: "pokemonId"
          description: "Pokemon ID"
          required: true
          type: "integer"
          format: "int64"
        - in: "body"
          name: "body"
          description: "Pokemon entity to update"
          required: true
          schema:
            $ref: "#/definitions/Pokemon"
      responses:
        "200":
          description: "Successful"
        "400":
          description: "Bad request"
        "404":
          description: "Not found"
    delete:
      tags:
        - "pokemon"
      summary: "Delete Pokemon by ID"
      description: "Deletes Pokemon with required ID"
      operationId: "deletePokemon"
      parameters:
        - in: "path"
          name: "pokemonId"
          description: "Pokemon ID"
          required: true
          type: "integer"
          format: "int64"
      responses:
        "200":
          description: "Successful"
        "400":
          description: "Bad request"
        "404":
          description: "Not found"
definitions:
  Pokemon:
    type: "object"
    description: "Pokemon object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      type1:
        type: "string"
        description: "Type enum"
        enum:
          - "NORMAL"
          - "FIRE"
          - "WATER"
          - "GRASS"
          - "FLYING"
          - "FIGHTING"
          - "POISON"
          - "ELECTRIC"
          - "GROUND"
          - "ROCK"
          - "PSYCHIC"
          - "ICE"
          - "BUG"
          - "GHOST"
          - "STEEL"
          - "DRAGON"
          - "DARK"
          - "FAIRY"
      type2:
        type: "string"
        description: "Type enum and allows nothing"
        enum:
          - "NORMAL"
          - "FIRE"
          - "WATER"
          - "GRASS"
          - "FLYING"
          - "FIGHTING"
          - "POISON"
          - "ELECTRIC"
          - "GROUND"
          - "ROCK"
          - "PSYCHIC"
          - "ICE"
          - "BUG"
          - "GHOST"
          - "STEEL"
          - "DRAGON"
          - "DARK"
          - "FAIRY"
          - "NOTHING"
      imageUrl:
        type: "string"
      ability:
        type: "string"
      moves:
        type: "integer"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
